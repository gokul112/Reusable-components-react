{"ast":null,"code":"var _jsxFileName = \"/Users/graj/reusable-components/src/components/Select/Select.js\";\nimport React, { useState } from 'react';\n\nfunction Select(props) {\n  const [data] = useState(props.data);\n  const [selectedData, updateSelectedData] = useState(\"\");\n\n  function handleChange() {\n    updateSelectedData(event.target.value);\n    if (props.onSelectChange) props.onSelectChange(selectedData);\n  }\n\n  let options = data.map(data => /*#__PURE__*/React.createElement(\"option\", {\n    key: data.id,\n    value: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, data.name));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"customSearch\",\n    className: \"custom-search-select\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Select Item\"), options));\n}\n\nexport default Select;","map":{"version":3,"sources":["/Users/graj/reusable-components/src/components/Select/Select.js"],"names":["React","useState","Select","props","data","selectedData","updateSelectedData","handleChange","event","target","value","onSelectChange","options","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,QAAM,CAACC,IAAD,IAASH,QAAQ,CAACE,KAAK,CAACC,IAAP,CAAvB;AACA,QAAM,CAACC,YAAD,EAAeC,kBAAf,IAAqCL,QAAQ,CAAC,EAAD,CAAnD;;AAEA,WAASM,YAAT,GAAuB;AACrBD,IAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACA,QAAIP,KAAK,CAACQ,cAAV,EAA0BR,KAAK,CAACQ,cAAN,CAAqBN,YAArB;AAC3B;;AAED,MAAIO,OAAO,GAAGR,IAAI,CAACS,GAAL,CAAST,IAAI,iBACzB;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACU,EAAlB;AAAsB,IAAA,KAAK,EAAEV,IAAI,CAACU,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,CAACW,IADR,CADY,CAAd;AAME,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,cAAb;AAA4B,IAAA,SAAS,EAAC,sBAAtC;AAA6D,IAAA,QAAQ,EAAER,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKK,OAFL,CADJ,CADJ;AASH;;AAED,eAAeV,MAAf","sourcesContent":["import React,{useState} from 'react'\n\nfunction Select(props) {\n\n  const [data] = useState(props.data);\n  const [selectedData, updateSelectedData] = useState(\"\");\n \n  function handleChange(){\n    updateSelectedData(event.target.value);\n    if (props.onSelectChange) props.onSelectChange(selectedData);\n  }\n\n  let options = data.map(data => (\n    <option key={data.id} value={data.id}>\n      {data.name}\n    </option>\n  ));\n\n    return (\n        <div>\n            <select name=\"customSearch\" className=\"custom-search-select\" onChange={handleChange}>\n                <option>Select Item</option>\n                {options}\n            </select>\n            \n        </div>\n    )\n}\n\nexport default Select\n"]},"metadata":{},"sourceType":"module"}